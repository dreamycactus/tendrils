This deliverable will be marked on structure, content, and programming form. The areas that will count are: Kismet, and UnrealScript. It is wholly possible to use unreal without using kismet, so that is an acceptable practice.

For Tendrils, they included a code guide. This will allow me to go through and mark according to the given files.

Level Pieces:

Door.uc

	This file lacks comments, so it is hard to understand exactly what is happening. However their naming conventions are good, and therefore I with a bit of research it was not that hard.

	- 2%

Doorway.uc

	There is no comment or indication of the difference between Doors, and Doorways.

	-2%

Hall.uc

	Empty? Might be just used as a place holder for what it extends.

Level.uc

	No comments really needed. Pretty simply definition of levels.

Levelgen.uc

	A few comments here, except there are empty functions, which doesn't make much sense.

GraphCmp.uc

	Plenty of comments, this class is a node in the level tree. It also attempts to connect the node to other nodes on the level.

GraphStrat
	
	Reasonable amount of comments, code structure is good.

RoomFrame

	You guys really need to at least comment the default properties in one place, so that you never forget what they are. Also there are no comments on what appears to be a pretty complicated set of function calls.

	-7%

RoomInfo

	Height is the only useful thing here.

Section

	Class that indicates how rooms are connected. No comments, but there isn't much to comment.

Rookie

	Good naming conventions + comments for first half, second half needs more comments

Inventory

	Lack of comments in some areas. -2%

Item
	
	Simple class, probably just for extension

Weapon (And all it's parts)

	Look good, lots of comments and good conventions.

EnemyProxy

	indicates a position that an enemy should be spawned.

Patrol Point

	Nothing here, indicates that is a simple place that an enemy can go to.

Camera

	Well commented, constructed, and good naming conventions.

Game

	Lack of comments would make it difficult to extend in the future. However the code is straight forward enough, that it's not too big a deal.

Total 87%, well done.